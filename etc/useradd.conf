# -*- shconfig -*-
#
# Configuration file for Vitalnix useradd (vxuseradd)


## MASTER_* and USER_* are effectively the same for VXUSERADD (they are
## executed before/after adding a user). However, since LIBVXMDSYNC adds
## multiple users in one go, these seemingly duplicate variables have their
## purpose.

# A script that is to be executed { before, after } ANY users are
# added. It is not called if there are no users to add.
#
#   %(USERS)  The number of users *about to be* added
#
#MASTER_PREADD=

# Same after having finished the addition stage.
#
#   %(USERS)  The number of users that *were actually* added
#
#MASTER_POSTADD=

# Per user script that is executed before addition.
#
#   %(USERNAME)  Login name
#   %(UID)       UID of the user (may be -1 to indicate automatic UID
#                selection (which has not been done yet!))
#   %(GID)       GID of the user's primary group
#   %(GROUP)     Name of the user's primary group
#   %(SGRP)      Names of the user's supplementary groups,
#                separated by comma. (May be empty)
#   %(REALNAME)  Full name of user (GECOS field)
#   %(HOME)      Home directory
#   %(SHELL)     Default shell
#
#USER_PREADD=

# Post-add script (Execute after a user has been added)
# Same fields as above apply. (In case of Vitalnix Synchronization, see
# warning in vitalnix.conf.)
#
#USER_POSTADD=

# hook for odd openSUSE invention
#
#USER_POSTADD=/usr/sbin/useradd.local %(USERNAME) %(UID) %(GID) %(HOME)

# If there is no -g option specified for useradd, use this group as default.
# GROUP can either be a GID or the group's name
#
GROUP=1000

# Home base, i.e. the directory where every user's home directory will go
#
HOME=/home

# Create the directory (useradd -m option). There is no way to unset
# CREATE_HOME from the command line once it has been enabled here.
# (yes/no or 0/1) -- this option does not apply to mdsync
#
CREATE_HOME=no

# Use the split home feature (Ã  la SourceForge):
#        0: /home/username
#  1 or 10: /home/u/username
#       15: /home/u/s/username
#        2: /home/u/us/username
# This is useful so they can be spread across multiple disks.
#
SPLIT_LEVEL=0

# The umask to create the directory with. The current umask from the process
# which useradd is running from is ignored, thus, the directory will have the
# mode 0777 & ~umask. (0066 is ok, since it is useful to have the execute bit
# to allow entrance to other users, e.g. wwwrun, to look for /home/user/www
# (browse there), but deny /home/user itself.)
#
UMASK=0066

# The skeleton directory to use. The contents of it will be copied
# into newly created home directories.
#
# /etc/skel often contains a lot of junk, so better start with a clean
# directory. sshd provides a nice dummy directory (/var/lib/empty) for this.
#
#SKEL=/etc/skel
SKEL=/var/lib/empty

# The default shell for new users
#
SHELL=/bin/bash

# The mininum number of days before a password can be changed
# (0 = can be changed any time again)
#
PASS_KEEP_MIN=0

# The maximum number of days a password can be kept
# (specify a big number if you want to disable it, like 99999)
#
PASS_KEEP_MAX=10000

# Number of days to warn before password expires
# (0 = feature disabled)
#
PASS_WARN_AGE=30

# Day, on which the account will get disabled
# (-1 = never)
#
PASS_EXPIRE=-1

# The number of days which have to pass after a password has
# expired until the account is locked (-1 = never)
#
PASS_INACTIVE=-1
