#!/usr/bin/perl
# Benutzer in /etc/passwd eintragen und Verzeichnise/Dateien kopieren
# von Eike Teiwes 17.09.98

$passwdFile = "/etc/passwd";	# üblich ist ="/etc/passwd"
$shadowFile = "/etc/shadow";	# üblich ist ="/etc/shadow"

print "\n";
print "          ------------------------------------------------------\n";
print "                  neue Schüler in $passwdFile eintragen\n"; 
print "          ------------------------------------------------------\n";
print "\n";

&vorbereitung;
&start_oder_stop;
unlink("$dattmp");	# eventuell vorhandene Datei löschen

print "Benutzer aus '$datadd' in '$passwdFile' eintragen\n";
print "und Home-Verzeichnisse einrichten...\n";
print "Kennworte generieren und in '$dattmp' speichern...\n";

&passwd_ergaenzen; # und Dateien kopieren und anpassen

print "\nKennworte aus '$dattmp' in '$shadowFile' eintragen...\n";

&kennworte_eintragen;

print "\nKennworte aus '$dattmp' zwecks Weiterverarbeitung aufbereiten...\n";

&kennworte_aufbereiten;
system("sort -o $datpwd -df $datpwd");

print "\n";
print "          ------------------------------------------------------\n";
print "              Starten Sie jetzt das Programm 'shadow'\n"; 
print "              (Drucken Sie die Neuzugaenge mit 'prnpwd')\n"; 
print "          ------------------------------------------------------\n";
print "\n";

# --------------------------------------------------------------------

sub vorbereitung {
    @f=`find *.goe 2>/dev/null`;
    if ($f[0] eq "") {
	print "Der Name der Schule kann nicht ermittelt werden.\n";
        print "Bitte im lokalen Verzeichnis ein Verzeichnis oder eine Datei\n";
        print "xxx.goe anlegen, wobei xxx den Namen angibt.\n\n";
	exit;
    } else {
        $domain=$f[0];
        chop($domain);
	$domain=$domain.".ni.schule.de";
    }
    $gruppe=group("schueler");
    $index=max_index("datadd.*");
    $datadd="datadd.".$index;
    $dattmp="dattmp.".$index;
    $datpwd="datpwd.".$index;
    if ($index eq "000") {
	print "FEHLER: Datei datadd.??? nicht gefunden.\n";
	print "Starten Sie zuerst das Programm 'listcmp'.\n\n";
	exit;
    }
    @f=`find skel 2>/dev/null`;
    if ($f[0] eq "") {
	system('md skel');
	print "Ein leeres Verzeichnis 'skel' wurde eingerichtet.\n\n";
    }
    $index=next_index("$passwdFile.???");
    $index2=next_index("$shadowFile.???");
    if ($index2>$index) {
	$index=$index2;
    }
    $passwdFile0=$passwdFile."\.".$index;
    $shadowFile0=$shadowFile."\.".$index;
    system("cp -f $passwdFile $passwdFile0");
    system("cp -f $shadowFile $shadowFile0");
    print "Die Datei '$passwdFile' wurde als '$passwdFile0' gesichert\n";
    print "Die Datei '$shadowFile' wurde als '$shadowFile0' gesichert\n\n";
}

# --------------------------------------------------------------------

sub start_oder_stop {
    print "\t\t\tQuelle: $datadd\n";
    print "\t\t\tFortsetzen? (j/n) ";
    $i=<STDIN>;
    chop($i);
    if (! ($i eq "j") && ! ($i eq "y")) {
	print "abgebrochen\n";
	exit;
    }
    print "\n";
}

# --------------------------------------------------------------------

sub passwd_ergaenzen {
    open (IN,$datadd);
    while (<IN>) {
	chop;
	($name,$gcos)=split(/:/);
	($fullname)=split(/,/,$gcos);
	print "\t\t$fullname\n";
        system("useradd -c '$gcos' -g $gruppe -m -k skel $name");
        system("./pwd $name >> $dattmp"); # Kennwort erstellen und sichern
    }
    close(IN);
}

# --------------------------------------------------------------------

sub kennworte_eintragen {
    system("chpasswd < $dattmp");
}

# --------------------------------------------------------------------

sub kennworte_aufbereiten {
    open (IN,"$dattmp");
    while (<IN>) {
	chop;
	($name,$passwd)=split(/:/);
	$feld{$name}=$passwd;
    }
    close(IN);
    open (OUT,">".$datpwd);
#   print OUT "klasse;vollname;benutzername;kennwort;\n";
    open (IN,$datadd);
    while (<IN>) {
	chop;
	($name,$gcos,$class)=split(/:/);
	($fullname)=split(/,/,$gcos);
	print OUT "$class;$fullname;$name;$feld{$name};\n";
    }
    close(IN);
    close(OUT);
}

# --------------------------------------------------------------------

sub next_index {
    $_=sprintf("%03d",max_index(@_)+1);
    $_;
}

# --------------------------------------------------------------------

sub max_index {
    local($max)="000";
    foreach (`find @_ 2>/dev/null`) {
	$i=substr($_,-3,3);
	if ($i>$max) {
	    $max=$i;
	}
    }	
    $_=sprintf("%03d",$max);
    $_;
}

# --------------------------------------------------------------------

sub group {
    local($name)=@_;
    $_=`grep $name /etc/group`;
    /(\w+)\W+(\w+)\W+(\w+)/;
    $3;
}


 
















